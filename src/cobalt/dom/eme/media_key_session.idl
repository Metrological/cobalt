// Copyright 2017 Google Inc. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// https://www.w3.org/TR/encrypted-media/#mediakeysession-interface

interface MediaKeySession : EventTarget {
  readonly attribute DOMString sessionId;
  // TODO: Implement |expiration|.
  // readonly attribute unrestricted double expiration;
  readonly attribute Promise<void> closed;
  [Conditional=COBALT_ENCRYPTED_MEDIA_EXTENSION_ENABLE_KEY_STATUSES_UPDATE]
  readonly attribute MediaKeyStatusMap keyStatuses;
  attribute EventHandler onkeystatuseschange;
  attribute EventHandler onmessage;
  Promise<void> generateRequest(DOMString initDataType,
                                BufferSource initData);
  // TODO: Trivially implement persistent sessions.
  // Promise<boolean> load(DOMString sessionId);
  Promise<void> update(BufferSource response);
  Promise<void> close();
  // TODO: Implement |remove|.
  // Promise<void> remove();
};
