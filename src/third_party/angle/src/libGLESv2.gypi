# Copyright (c) 2013 The ANGLE Project Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

{
    'variables':
    {
        # These file lists are shared with the GN build.
        'libangle_common_sources':
        [
            '<(DEPTH)/third_party/angle/src/common/Color.h',
            '<(DEPTH)/third_party/angle/src/common/Color.inl',
            '<(DEPTH)/third_party/angle/src/common/Float16ToFloat32.cpp',
            '<(DEPTH)/third_party/angle/src/common/MemoryBuffer.cpp',
            '<(DEPTH)/third_party/angle/src/common/MemoryBuffer.h',
            '<(DEPTH)/third_party/angle/src/common/Optional.h',
            '<(DEPTH)/third_party/angle/src/common/angleutils.cpp',
            '<(DEPTH)/third_party/angle/src/common/angleutils.h',
            '<(DEPTH)/third_party/angle/src/common/bitset_utils.h',
            '<(DEPTH)/third_party/angle/src/common/debug.cpp',
            '<(DEPTH)/third_party/angle/src/common/debug.h',
            '<(DEPTH)/third_party/angle/src/common/mathutil.cpp',
            '<(DEPTH)/third_party/angle/src/common/mathutil.h',
            '<(DEPTH)/third_party/angle/src/common/matrix_utils.h',
            '<(DEPTH)/third_party/angle/src/common/platform.h',
            '<(DEPTH)/third_party/angle/src/common/string_utils.cpp',
            '<(DEPTH)/third_party/angle/src/common/string_utils.h',
            '<(DEPTH)/third_party/angle/src/common/third_party/numerics/base/logging.h',
            '<(DEPTH)/third_party/angle/src/common/third_party/numerics/base/numerics/safe_conversions.h',
            '<(DEPTH)/third_party/angle/src/common/third_party/numerics/base/numerics/safe_conversions_impl.h',
            '<(DEPTH)/third_party/angle/src/common/third_party/numerics/base/numerics/safe_math.h',
            '<(DEPTH)/third_party/angle/src/common/third_party/numerics/base/numerics/safe_math_impl.h',
            '<(DEPTH)/third_party/angle/src/common/tls.cpp',
            '<(DEPTH)/third_party/angle/src/common/tls.h',
            '<(DEPTH)/third_party/angle/src/common/utilities.cpp',
            '<(DEPTH)/third_party/angle/src/common/utilities.h',
            '<(DEPTH)/third_party/angle/src/common/vector_utils.h',
            '<(DEPTH)/third_party/angle/src/common/version.h',
        ],
        'libangle_common_linux_sources':
        [
            '<(DEPTH)/third_party/angle/src/common/system_utils_linux.cpp',
        ],
        'libangle_common_mac_sources':
        [
            '<(DEPTH)/third_party/angle/src/common/system_utils_mac.cpp',
        ],
        'libangle_common_win_sources':
        [
            '<(DEPTH)/third_party/angle/src/common/system_utils_win.cpp',
        ],
        'libangle_image_util_sources':
        [
            '<(DEPTH)/third_party/angle/src/image_util/copyimage.cpp',
            '<(DEPTH)/third_party/angle/src/image_util/copyimage.h',
            '<(DEPTH)/third_party/angle/src/image_util/copyimage.inl',
            '<(DEPTH)/third_party/angle/src/image_util/generatemip.h',
            '<(DEPTH)/third_party/angle/src/image_util/generatemip.inl',
            '<(DEPTH)/third_party/angle/src/image_util/imageformats.cpp',
            '<(DEPTH)/third_party/angle/src/image_util/imageformats.h',
            '<(DEPTH)/third_party/angle/src/image_util/loadimage.cpp',
            '<(DEPTH)/third_party/angle/src/image_util/loadimage.h',
            '<(DEPTH)/third_party/angle/src/image_util/loadimage.inl',
            '<(DEPTH)/third_party/angle/src/image_util/loadimage_etc.cpp',
        ],
        'libangle_gpu_info_util_sources':
        [
            '<(DEPTH)/third_party/angle/src/gpu_info_util/SystemInfo.cpp',
            '<(DEPTH)/third_party/angle/src/gpu_info_util/SystemInfo.h',
            '<(DEPTH)/third_party/angle/src/gpu_info_util/SystemInfo_internal.h',
        ],
        'libangle_gpu_info_util_win_sources':
        [
            '<(DEPTH)/third_party/angle/src/gpu_info_util/SystemInfo_win.cpp',
        ],
        'libangle_gpu_info_util_linux_sources':
        [
            '<(DEPTH)/third_party/angle/src/gpu_info_util/SystemInfo_linux.cpp',
        ],
        'libangle_gpu_info_util_libpci_sources':
        [
            '<(DEPTH)/third_party/angle/src/gpu_info_util/SystemInfo_libpci.cpp',
        ],
        'libangle_gpu_info_util_x11_sources':
        [
            '<(DEPTH)/third_party/angle/src/gpu_info_util/SystemInfo_x11.cpp',
        ],
        'libangle_gpu_info_util_mac_sources':
        [
            '<(DEPTH)/third_party/angle/src/gpu_info_util/SystemInfo_mac.mm',
        ],
        'libangle_includes':
        [
            '<(DEPTH)/third_party/angle/include/angle_gl.h',
            '<(DEPTH)/third_party/angle/include/export.h',
            '<(DEPTH)/third_party/angle/include/EGL/egl.h',
            '<(DEPTH)/third_party/angle/include/EGL/eglext.h',
            '<(DEPTH)/third_party/angle/include/EGL/eglplatform.h',
            '<(DEPTH)/third_party/angle/include/GLES2/gl2.h',
            '<(DEPTH)/third_party/angle/include/GLES2/gl2ext.h',
            '<(DEPTH)/third_party/angle/include/GLES2/gl2platform.h',
            '<(DEPTH)/third_party/angle/include/GLES3/gl3.h',
            '<(DEPTH)/third_party/angle/include/GLES3/gl3platform.h',
            '<(DEPTH)/third_party/angle/include/GLES3/gl31.h',
            '<(DEPTH)/third_party/angle/include/GLES3/gl32.h',
            '<(DEPTH)/third_party/angle/include/GLSLANG/ShaderLang.h',
            '<(DEPTH)/third_party/angle/include/GLSLANG/ShaderVars.h',
            '<(DEPTH)/third_party/angle/include/KHR/khrplatform.h',
            '<(DEPTH)/third_party/angle/include/platform/Platform.h',
            '<(DEPTH)/third_party/angle/include/platform/WorkaroundsD3D.h',
        ],
        'libangle_sources':
        [
            '<(DEPTH)/third_party/angle/src/common/event_tracer.cpp',
            '<(DEPTH)/third_party/angle/src/common/event_tracer.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/AttributeMap.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/AttributeMap.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/BinaryStream.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/Buffer.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/Buffer.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/Caps.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/Caps.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/Compiler.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/Compiler.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/Config.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/Config.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/Constants.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/Context.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/Context.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/ContextState.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/ContextState.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/Debug.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/Debug.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/Device.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/Device.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/Display.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/Display.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/Error.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/Error.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/Error.inl',
            '<(DEPTH)/third_party/angle/src/libANGLE/Fence.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/Fence.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/Framebuffer.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/Framebuffer.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/FramebufferAttachment.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/FramebufferAttachment.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/HandleAllocator.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/HandleAllocator.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/HandleRangeAllocator.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/HandleRangeAllocator.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/Image.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/Image.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/ImageIndex.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/ImageIndex.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/IndexRangeCache.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/IndexRangeCache.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/LoggingAnnotator.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/LoggingAnnotator.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/Path.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/Path.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/Platform.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/Program.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/Program.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/Query.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/Query.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/RefCountObject.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/Renderbuffer.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/Renderbuffer.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/ResourceManager.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/ResourceManager.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/Sampler.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/Sampler.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/Shader.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/Shader.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/State.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/State.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/Stream.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/Stream.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/Surface.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/Surface.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/Texture.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/Texture.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/Thread.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/Thread.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/TransformFeedback.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/TransformFeedback.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/Uniform.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/Uniform.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/UniformLinker.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/UniformLinker.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/VaryingPacking.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/VaryingPacking.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/Version.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/Version.inl',
            '<(DEPTH)/third_party/angle/src/libANGLE/VertexArray.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/VertexArray.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/VertexAttribute.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/VertexAttribute.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/VertexAttribute.inl',
            '<(DEPTH)/third_party/angle/src/libANGLE/WorkerThread.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/WorkerThread.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/angletypes.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/angletypes.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/angletypes.inl',
            '<(DEPTH)/third_party/angle/src/libANGLE/entry_points_enum_autogen.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/es3_copy_conversion_table_autogen.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/features.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/format_map_autogen.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/formatutils.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/formatutils.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/histogram_macros.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/params.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/params.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/queryconversions.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/queryconversions.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/queryutils.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/queryutils.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/BufferImpl.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/CompilerImpl.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/ContextImpl.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/ContextImpl.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/driver_utils.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/driver_utils.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/DeviceImpl.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/DeviceImpl.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/DisplayImpl.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/DisplayImpl.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/EGLImplFactory.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/FenceNVImpl.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/FenceSyncImpl.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/Format_ID_autogen.inl',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/Format_table_autogen.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/Format.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/FramebufferAttachmentObjectImpl.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/FramebufferImpl.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/GLImplFactory.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/ImageImpl.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/ProgramImpl.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/QueryImpl.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/RenderbufferImpl.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/SamplerImpl.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/ShaderImpl.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/StreamProducerImpl.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/SurfaceImpl.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/SurfaceImpl.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/TextureImpl.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/TextureImpl.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/TransformFeedbackImpl.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/VertexArrayImpl.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/load_functions_table.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/load_functions_table_autogen.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/renderer_utils.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/renderer_utils.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/signal_utils.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/validationEGL.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/validationEGL.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/validationES.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/validationES.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/validationES2.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/validationES2.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/validationES3.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/validationES3.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/validationES31.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/validationES31.h',
            '<(DEPTH)/third_party/angle/src/third_party/murmurhash/MurmurHash3.cpp',
            '<(DEPTH)/third_party/angle/src/third_party/murmurhash/MurmurHash3.h',
            '<(DEPTH)/third_party/angle/src/third_party/trace_event/trace_event.h',
        ],
        'libangle_d3d_shared_sources':
        [
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/BufferD3D.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/BufferD3D.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/CompilerD3D.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/CompilerD3D.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/DeviceD3D.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/DeviceD3D.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/DisplayD3D.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/DisplayD3D.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/DynamicHLSL.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/DynamicHLSL.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/EGLImageD3D.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/EGLImageD3D.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/formatutilsD3D.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/FramebufferD3D.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/FramebufferD3D.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/HLSLCompiler.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/HLSLCompiler.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/ImageD3D.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/ImageD3D.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/IndexBuffer.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/IndexBuffer.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/IndexDataManager.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/IndexDataManager.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/NativeWindowD3D.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/NativeWindowD3D.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/ProgramD3D.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/ProgramD3D.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/RenderbufferD3D.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/RenderbufferD3D.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/RendererD3D.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/RendererD3D.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/RenderTargetD3D.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/RenderTargetD3D.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/SamplerD3D.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/ShaderD3D.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/ShaderD3D.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/ShaderExecutableD3D.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/ShaderExecutableD3D.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/SurfaceD3D.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/SurfaceD3D.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/SwapChainD3D.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/SwapChainD3D.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/TextureD3D.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/TextureD3D.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/TextureStorage.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/VertexBuffer.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/VertexBuffer.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/VertexDataManager.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/VertexDataManager.h',
        ],
        'libangle_d3d9_sources':
        [
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d9/Blit9.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d9/Blit9.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d9/Buffer9.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d9/Buffer9.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d9/Context9.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d9/Context9.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d9/DebugAnnotator9.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d9/DebugAnnotator9.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d9/Fence9.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d9/Fence9.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d9/formatutils9.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d9/formatutils9.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d9/Framebuffer9.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d9/Framebuffer9.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d9/Image9.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d9/Image9.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d9/IndexBuffer9.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d9/IndexBuffer9.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d9/NativeWindow9.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d9/NativeWindow9.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d9/Query9.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d9/Query9.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d9/Renderer9.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d9/Renderer9.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d9/renderer9_utils.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d9/renderer9_utils.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d9/RenderTarget9.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d9/RenderTarget9.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d9/ShaderCache.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d9/ShaderExecutable9.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d9/ShaderExecutable9.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d9/shaders/compiled/componentmaskps.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d9/shaders/compiled/componentmaskpremultps.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d9/shaders/compiled/componentmaskunmultps.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d9/shaders/compiled/luminanceps.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d9/shaders/compiled/luminancepremultps.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d9/shaders/compiled/luminanceunmultps.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d9/shaders/compiled/passthroughps.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d9/shaders/compiled/standardvs.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d9/StateManager9.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d9/StateManager9.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d9/SwapChain9.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d9/SwapChain9.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d9/TextureStorage9.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d9/TextureStorage9.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d9/VertexArray9.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d9/VertexBuffer9.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d9/VertexBuffer9.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d9/vertexconversion.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d9/VertexDeclarationCache.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d9/VertexDeclarationCache.h',
        ],
        'libangle_d3d11_sources':
        [
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d11/Blit11.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d11/Blit11.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d11/Buffer11.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d11/Buffer11.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d11/Clear11.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d11/Clear11.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d11/Context11.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d11/Context11.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d11/copyvertex.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d11/copyvertex.inl',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d11/DebugAnnotator11.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d11/DebugAnnotator11.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d11/dxgi_format_map_autogen.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d11/dxgi_support_table.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d11/dxgi_support_table.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d11/Fence11.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d11/Fence11.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d11/formatutils11.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d11/formatutils11.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d11/Framebuffer11.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d11/Framebuffer11.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d11/Image11.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d11/Image11.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d11/IndexBuffer11.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d11/IndexBuffer11.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d11/InputLayoutCache.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d11/InputLayoutCache.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d11/NativeWindow11.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d11/PixelTransfer11.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d11/PixelTransfer11.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d11/Query11.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d11/Query11.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d11/Renderer11.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d11/Renderer11.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d11/ResourceManager11.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d11/ResourceManager11.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d11/renderer11_utils.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d11/renderer11_utils.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d11/RenderStateCache.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d11/RenderStateCache.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d11/RenderTarget11.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d11/RenderTarget11.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d11/ShaderExecutable11.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d11/ShaderExecutable11.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d11/shaders/compiled/buffertotexture11_gs.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d11/shaders/compiled/buffertotexture11_ps_4f.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d11/shaders/compiled/buffertotexture11_ps_4i.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d11/shaders/compiled/buffertotexture11_ps_4ui.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d11/shaders/compiled/buffertotexture11_vs.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d11/shaders/compiled/clear11_fl9vs.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d11/shaders/compiled/clear11vs.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d11/shaders/compiled/clearfloat11_fl9ps.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d11/shaders/compiled/clearfloat11ps.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d11/shaders/compiled/clearsint11ps.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d11/shaders/compiled/clearuint11ps.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d11/shaders/compiled/passthrough2d11vs.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d11/shaders/compiled/passthrough3d11gs.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d11/shaders/compiled/passthrough3d11vs.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d11/shaders/compiled/passthroughdepth2d11ps.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d11/shaders/compiled/passthroughlum2d11ps.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d11/shaders/compiled/passthroughlum3d11ps.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d11/shaders/compiled/passthroughlumalpha2d11ps.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d11/shaders/compiled/passthroughlumalpha3d11ps.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d11/shaders/compiled/passthroughr2d11ps.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d11/shaders/compiled/passthroughr2di11ps.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d11/shaders/compiled/passthroughr2dui11ps.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d11/shaders/compiled/passthroughr3d11ps.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d11/shaders/compiled/passthroughr3di11ps.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d11/shaders/compiled/passthroughr3dui11ps.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d11/shaders/compiled/passthroughrg2d11ps.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d11/shaders/compiled/passthroughrg2di11ps.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d11/shaders/compiled/passthroughrg2dui11ps.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d11/shaders/compiled/passthroughrg3d11ps.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d11/shaders/compiled/passthroughrg3di11ps.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d11/shaders/compiled/passthroughrg3dui11ps.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d11/shaders/compiled/passthroughrgb2d11ps.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d11/shaders/compiled/passthroughrgbpremultiply2d11ps.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d11/shaders/compiled/passthroughrgbunmultiply2d11ps.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d11/shaders/compiled/passthroughrgb2di11ps.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d11/shaders/compiled/passthroughrgb2dui11ps.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d11/shaders/compiled/passthroughrgb3d11ps.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d11/shaders/compiled/passthroughrgb3di11ps.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d11/shaders/compiled/passthroughrgb3dui11ps.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d11/shaders/compiled/passthroughrgba2d11ps.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d11/shaders/compiled/passthroughrgbapremultiply2d11ps.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d11/shaders/compiled/passthroughrgbaunmultiply2d11ps.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d11/shaders/compiled/passthroughrgba2di11ps.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d11/shaders/compiled/passthroughrgba2dui11ps.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d11/shaders/compiled/passthroughrgba3d11ps.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d11/shaders/compiled/passthroughrgba3di11ps.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d11/shaders/compiled/passthroughrgba3dui11ps.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d11/shaders/compiled/swizzlef2darrayps.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d11/shaders/compiled/swizzlef2dps.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d11/shaders/compiled/swizzlef3dps.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d11/shaders/compiled/swizzlei2darrayps.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d11/shaders/compiled/swizzlei2dps.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d11/shaders/compiled/swizzlei3dps.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d11/shaders/compiled/swizzleui2darrayps.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d11/shaders/compiled/swizzleui2dps.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d11/shaders/compiled/swizzleui3dps.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d11/StateManager11.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d11/StateManager11.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d11/StreamProducerNV12.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d11/StreamProducerNV12.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d11/SwapChain11.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d11/SwapChain11.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d11/TextureStorage11.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d11/TextureStorage11.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d11/TransformFeedback11.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d11/TransformFeedback11.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d11/Trim11.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d11/Trim11.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d11/texture_format_table_autogen.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d11/texture_format_table_utils.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d11/texture_format_table.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d11/texture_format_table.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d11/VertexArray11.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d11/VertexArray11.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d11/VertexBuffer11.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d11/VertexBuffer11.h',
        ],
        'libangle_d3d11_win32_sources':
        [
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d11/win32/NativeWindow11Win32.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d11/win32/NativeWindow11Win32.h',
            '<(DEPTH)/third_party/angle/src/third_party/systeminfo/SystemInfo.cpp',
            '<(DEPTH)/third_party/angle/src/third_party/systeminfo/SystemInfo.h',
        ],
        'libangle_d3d11_winrt_sources':
        [
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d11/winrt/CoreWindowNativeWindow.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d11/winrt/CoreWindowNativeWindow.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d11/winrt/InspectableNativeWindow.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d11/winrt/InspectableNativeWindow.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d11/winrt/NativeWindow11WinRT.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d11/winrt/NativeWindow11WinRT.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d11/winrt/SwapChainPanelNativeWindow.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/d3d/d3d11/winrt/SwapChainPanelNativeWindow.h',
        ],
        'libangle_gl_sources':
        [
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/gl/BlitGL.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/gl/BlitGL.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/gl/BufferGL.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/gl/BufferGL.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/gl/CompilerGL.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/gl/CompilerGL.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/gl/ContextGL.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/gl/ContextGL.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/gl/DisplayGL.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/gl/DisplayGL.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/gl/FenceNVGL.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/gl/FenceNVGL.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/gl/FenceSyncGL.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/gl/FenceSyncGL.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/gl/FramebufferGL.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/gl/FramebufferGL.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/gl/FunctionsGL.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/gl/FunctionsGL.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/gl/PathGL.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/gl/PathGL.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/gl/ProgramGL.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/gl/ProgramGL.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/gl/QueryGL.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/gl/QueryGL.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/gl/RenderbufferGL.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/gl/RenderbufferGL.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/gl/RendererGL.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/gl/RendererGL.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/gl/SamplerGL.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/gl/SamplerGL.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/gl/ShaderGL.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/gl/ShaderGL.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/gl/StateManagerGL.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/gl/StateManagerGL.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/gl/SurfaceGL.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/gl/SurfaceGL.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/gl/TextureGL.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/gl/TextureGL.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/gl/TransformFeedbackGL.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/gl/TransformFeedbackGL.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/gl/VertexArrayGL.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/gl/VertexArrayGL.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/gl/WorkaroundsGL.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/gl/formatutilsgl.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/gl/formatutilsgl.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/gl/functionsgl_enums.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/gl/functionsgl_typedefs.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/gl/renderergl_utils.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/gl/renderergl_utils.h',
        ],
        'libangle_gl_wgl_sources':
        [
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/gl/wgl/D3DTextureSurfaceWGL.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/gl/wgl/D3DTextureSurfaceWGL.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/gl/wgl/DisplayWGL.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/gl/wgl/DisplayWGL.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/gl/wgl/DXGISwapChainWindowSurfaceWGL.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/gl/wgl/DXGISwapChainWindowSurfaceWGL.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/gl/wgl/FunctionsWGL.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/gl/wgl/FunctionsWGL.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/gl/wgl/PbufferSurfaceWGL.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/gl/wgl/PbufferSurfaceWGL.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/gl/wgl/WindowSurfaceWGL.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/gl/wgl/WindowSurfaceWGL.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/gl/wgl/functionswgl_typedefs.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/gl/wgl/wgl_utils.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/gl/wgl/wgl_utils.h',
            '<(DEPTH)/third_party/angle/src/third_party/khronos/GL/wglext.h',
        ],
        'libangle_gl_glx_sources':
        [
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/gl/glx/DisplayGLX.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/gl/glx/DisplayGLX.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/gl/glx/FunctionsGLX.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/gl/glx/FunctionsGLX.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/gl/glx/PbufferSurfaceGLX.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/gl/glx/PbufferSurfaceGLX.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/gl/glx/SurfaceGLX.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/gl/glx/SurfaceGLX.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/gl/glx/WindowSurfaceGLX.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/gl/glx/WindowSurfaceGLX.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/gl/glx/functionsglx_typedefs.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/gl/glx/platform_glx.h',
        ],
        'libangle_gl_egl_sources':
        [
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/gl/egl/DisplayEGL.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/gl/egl/DisplayEGL.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/gl/egl/FunctionsEGL.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/gl/egl/FunctionsEGL.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/gl/egl/functionsegl_typedefs.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/gl/egl/PbufferSurfaceEGL.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/gl/egl/PbufferSurfaceEGL.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/gl/egl/SurfaceEGL.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/gl/egl/SurfaceEGL.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/gl/egl/WindowSurfaceEGL.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/gl/egl/WindowSurfaceEGL.h',
        ],
        'libangle_gl_egl_dl_sources':
        [
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/gl/egl/FunctionsEGLDL.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/gl/egl/FunctionsEGLDL.h',
        ],
        'libangle_gl_ozone_sources':
        [
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/gl/egl/ozone/DisplayOzone.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/gl/egl/ozone/DisplayOzone.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/gl/egl/ozone/SurfaceOzone.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/gl/egl/ozone/SurfaceOzone.h',
        ],
        'libangle_gl_egl_android_sources':
        [
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/gl/egl/android/DisplayAndroid.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/gl/egl/android/DisplayAndroid.h',
        ],
        'libangle_gl_cgl_sources':
        [
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/gl/cgl/DisplayCGL.mm',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/gl/cgl/DisplayCGL.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/gl/cgl/PbufferSurfaceCGL.mm',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/gl/cgl/PbufferSurfaceCGL.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/gl/cgl/WindowSurfaceCGL.mm',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/gl/cgl/WindowSurfaceCGL.h',
        ],
        'libangle_vulkan_sources':
        [
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/vulkan/BufferVk.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/vulkan/BufferVk.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/vulkan/CompilerVk.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/vulkan/CompilerVk.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/vulkan/ContextVk.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/vulkan/ContextVk.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/vulkan/DeviceVk.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/vulkan/DeviceVk.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/vulkan/DisplayVk.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/vulkan/DisplayVk.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/vulkan/FenceNVVk.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/vulkan/FenceNVVk.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/vulkan/FenceSyncVk.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/vulkan/FenceSyncVk.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/vulkan/FramebufferVk.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/vulkan/FramebufferVk.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/vulkan/GlslangWrapper.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/vulkan/GlslangWrapper.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/vulkan/ImageVk.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/vulkan/ImageVk.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/vulkan/ProgramVk.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/vulkan/ProgramVk.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/vulkan/QueryVk.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/vulkan/QueryVk.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/vulkan/RenderbufferVk.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/vulkan/RenderbufferVk.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/vulkan/RendererVk.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/vulkan/RendererVk.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/vulkan/RenderTargetVk.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/vulkan/RenderTargetVk.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/vulkan/SamplerVk.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/vulkan/SamplerVk.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/vulkan/ShaderVk.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/vulkan/ShaderVk.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/vulkan/SurfaceVk.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/vulkan/SurfaceVk.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/vulkan/TextureVk.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/vulkan/TextureVk.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/vulkan/TransformFeedbackVk.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/vulkan/TransformFeedbackVk.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/vulkan/VertexArrayVk.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/vulkan/VertexArrayVk.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/vulkan/formatutilsvk.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/vulkan/formatutilsvk.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/vulkan/renderervk_utils.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/vulkan/renderervk_utils.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/vulkan/vk_format_table_autogen.cpp',
        ],
        'libangle_vulkan_win32_sources':
        [
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/vulkan/win32/DisplayVkWin32.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/vulkan/win32/DisplayVkWin32.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/vulkan/win32/WindowSurfaceVkWin32.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/vulkan/win32/WindowSurfaceVkWin32.h',
        ],
        'libangle_vulkan_xcb_sources':
        [
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/vulkan/xcb/DisplayVkXcb.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/vulkan/xcb/DisplayVkXcb.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/vulkan/xcb/WindowSurfaceVkXcb.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/vulkan/xcb/WindowSurfaceVkXcb.h',
        ],
        'libangle_null_sources':
        [
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/null/BufferNULL.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/null/BufferNULL.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/null/CompilerNULL.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/null/CompilerNULL.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/null/ContextNULL.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/null/ContextNULL.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/null/DeviceNULL.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/null/DeviceNULL.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/null/DisplayNULL.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/null/DisplayNULL.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/null/FenceNVNULL.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/null/FenceNVNULL.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/null/FenceSyncNULL.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/null/FenceSyncNULL.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/null/FramebufferNULL.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/null/FramebufferNULL.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/null/ImageNULL.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/null/ImageNULL.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/null/PathNULL.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/null/PathNULL.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/null/ProgramNULL.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/null/ProgramNULL.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/null/QueryNULL.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/null/QueryNULL.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/null/RenderbufferNULL.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/null/RenderbufferNULL.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/null/SamplerNULL.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/null/SamplerNULL.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/null/ShaderNULL.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/null/ShaderNULL.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/null/SurfaceNULL.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/null/SurfaceNULL.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/null/TextureNULL.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/null/TextureNULL.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/null/TransformFeedbackNULL.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/null/TransformFeedbackNULL.h',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/null/VertexArrayNULL.cpp',
            '<(DEPTH)/third_party/angle/src/libANGLE/renderer/null/VertexArrayNULL.h',
        ],
        'libglesv2_sources':
        [
            '<(DEPTH)/third_party/angle/src/common/angleutils.h',
            '<(DEPTH)/third_party/angle/src/common/debug.h',
            '<(DEPTH)/third_party/angle/src/libGLESv2/entry_points_egl.cpp',
            '<(DEPTH)/third_party/angle/src/libGLESv2/entry_points_egl.h',
            '<(DEPTH)/third_party/angle/src/libGLESv2/entry_points_egl_ext.cpp',
            '<(DEPTH)/third_party/angle/src/libGLESv2/entry_points_egl_ext.h',
            '<(DEPTH)/third_party/angle/src/libGLESv2/entry_points_gles_2_0_autogen.cpp',
            '<(DEPTH)/third_party/angle/src/libGLESv2/entry_points_gles_2_0_autogen.h',
            '<(DEPTH)/third_party/angle/src/libGLESv2/entry_points_gles_2_0_ext.cpp',
            '<(DEPTH)/third_party/angle/src/libGLESv2/entry_points_gles_2_0_ext.h',
            '<(DEPTH)/third_party/angle/src/libGLESv2/entry_points_gles_3_0.cpp',
            '<(DEPTH)/third_party/angle/src/libGLESv2/entry_points_gles_3_0.h',
            '<(DEPTH)/third_party/angle/src/libGLESv2/entry_points_gles_3_1.cpp',
            '<(DEPTH)/third_party/angle/src/libGLESv2/entry_points_gles_3_1.h',
            '<(DEPTH)/third_party/angle/src/libGLESv2/global_state.cpp',
            '<(DEPTH)/third_party/angle/src/libGLESv2/global_state.h',
            '<(DEPTH)/third_party/angle/src/libGLESv2/libGLESv2.cpp',
            '<(DEPTH)/third_party/angle/src/libGLESv2/libGLESv2.def',
            '<(DEPTH)/third_party/angle/src/libGLESv2/libGLESv2.rc',
            '<(DEPTH)/third_party/angle/src/libGLESv2/resource.h',
        ],
        'libegl_sources':
        [
            '<(DEPTH)/third_party/angle/src/libEGL/libEGL.cpp',
            '<(DEPTH)/third_party/angle/src/libEGL/libEGL.def',
            '<(DEPTH)/third_party/angle/src/libEGL/libEGL.rc',
            '<(DEPTH)/third_party/angle/src/libEGL/resource.h',
        ],
    },
    'target_defaults': {
        'conditions':
        [
            ['OS=="starboard"',
            {
                'conditions':
                [
                    ['angle_platform_linux==1',
                    {
                        'defines': [
                            'ANGLE_PLATFORM_LINUX=1',
                        ],
                    }],
                    ['angle_platform_posix==1',
                    {
                        'defines': [
                            'ANGLE_PLATFORM_POSIX=1',
                        ],
                    }],
                    ['angle_platform_windows==1',
                    {
                        'defines': [
                            'ANGLE_PLATFORM_WINDOWS=1',
                        ],
                    }],
                ],
            }],
        ],
    },
    # Everything below this is duplicated in the GN build. If you change
    # anything also change angle/BUILD.gn
    'targets':
    [
        {
            # This target includes the right ANGLE defines for <(DEPTH)/third_party/angle/src/common/platform.h for D3D11.
            # It also links against the right libs. This is useful for the tests, which
            # have special D3D11 code for Debug runtime error message handling.
            'target_name': 'libANGLE_d3d11_config',
            'type': 'none',
            'conditions':
            [
                ['angle_enable_d3d11==1',
                {
                    'link_settings':
                    {
                        'msvs_settings':
                        {
                            'VCLinkerTool':
                            {
                                'conditions':
                                [
                                    ['angle_build_winrt==0',
                                    {
                                        'AdditionalDependencies':
                                        [
                                            'dxguid.lib',
                                        ],
                                    }],
                                    ['angle_build_winrt==1',
                                    {
                                        'AdditionalDependencies':
                                        [
                                            'dxguid.lib',
                                            'd3d11.lib',
                                            'd3dcompiler.lib',
                                        ],
                                    }],
                                ],
                            }
                        },
                    },
                }],
            ],
        },

        {
            'target_name': 'libANGLE_renderer_config',
            'type': 'none',
            'direct_dependent_settings':
            {
                'conditions':
                [
                    ['angle_enable_d3d11==1',
                    {
                        'defines':
                        [
                            'ANGLE_ENABLE_D3D11',
                        ],
                    }],
                    ['angle_enable_d3d9==1',
                    {
                        'defines':
                        [
                            'ANGLE_ENABLE_D3D9',
                        ],
                    }],
                    ['angle_enable_gl==1',
                    {
                        'defines':
                        [
                            'ANGLE_ENABLE_OPENGL',
                        ],
                    }],
                    ['angle_enable_vulkan==1',
                    {
                        'defines':
                        [
                            'ANGLE_ENABLE_VULKAN',
                        ],
                    }],
                    ['angle_enable_null==1',
                    {
                        'defines':
                        [
                            'ANGLE_ENABLE_NULL',
                        ],
                    }],
                ],
            },
        },

        {
            'target_name': 'libANGLE',
            'type': 'static_library',
            'dependencies':
            [
                'translator',
                'angle_common',
                'angle_image_util',
                'angle_gpu_info_util',
                'libANGLE_d3d11_config',
                'libANGLE_renderer_config',
            ],
            'includes': [ '../gyp/common_defines.gypi', ],
            'include_dirs':
            [
                '<(DEPTH)/third_party/angle/',
                '<(DEPTH)/third_party/angle/include',
                '<(DEPTH)/third_party/angle/src/third_party/khronos',
            ],
            'sources':
            [
                '<@(libangle_sources)',
                '<@(libangle_includes)',
            ],
            'defines':
            [
                'LIBANGLE_IMPLEMENTATION',
            ],
            'export_dependent_settings':
            [
                'angle_common',
                'libANGLE_d3d11_config',
                'libANGLE_renderer_config',
            ],
            'direct_dependent_settings':
            {
                'include_dirs':
                [
                    '<(DEPTH)/third_party/angle/src',
                    '<(DEPTH)/third_party/angle/include',
                ],
                'defines':
                [
                    'LIBANGLE_IMPLEMENTATION',
                    'GL_GLEXT_PROTOTYPES',
                    'ANGLE_PRELOADED_D3DCOMPILER_MODULE_NAMES={ "d3dcompiler_47.dll", "d3dcompiler_46.dll", "d3dcompiler_43.dll" }',
                ],
                'conditions':
                [
                    ['target_os=="win"', {
                        'defines':
                        [
                            'GL_APICALL=',
                        ],
                    }, {
                        'defines':
                        [
                            'GL_APICALL=__attribute__((visibility("default")))',
                        ],
                    }],
                    ['OS == "mac"',
                    {
                        'xcode_settings':
                        {
                            'DYLIB_INSTALL_NAME_BASE': '@rpath',
                        },
                    }],
                    ['angle_enable_gl==1',
                    {
                        'conditions':
                        [
                            ['angle_use_glx==1',
                            {
                                'defines':
                                [
                                    'ANGLE_USE_X11',
                                ],
                            }],
                        ],
                    }],
                ],
            },
            'conditions':
            [
                ['angle_enable_d3d9==1 or angle_enable_d3d11==1',
                {
                    'sources':
                    [
                        '<@(libangle_d3d_shared_sources)',
                    ],
                }],
                ['angle_enable_d3d9==1',
                {
                    'sources':
                    [
                        '<@(libangle_d3d9_sources)',
                    ],
                    'link_settings':
                    {
                        'msvs_settings':
                        {
                            'VCLinkerTool':
                            {
                                'AdditionalDependencies':
                                [
                                    'd3d9.lib',
                                ]
                            }
                        },
                    },
                }],
                ['angle_enable_d3d11==1',
                {
                    'sources':
                    [
                        '<@(libangle_d3d11_sources)',
                    ],
                    'conditions':
                    [
                        ['angle_build_winrt==1',
                        {
                            'sources':
                            [
                                '<@(libangle_d3d11_winrt_sources)',
                            ],
                        },
                        { # win32
                            'sources':
                            [
                                '<@(libangle_d3d11_win32_sources)',
                            ],
                        }],
                        ['enable_d3d11_feature_level_11==1',
                        {
                            'defines': [
                                'ENABLE_D3D11_FEATURE_LEVEL_11'
                            ]
                        }],
                    ],
                }],
                ['angle_enable_gl==1',
                {
                    'sources':
                    [
                        '<@(libangle_gl_sources)',
                    ],
                    'conditions':
                    [
                        ['target_os=="win"',
                        {
                            'sources':
                            [
                                '<@(libangle_gl_wgl_sources)',
                            ],
                        }],
                        ['angle_use_glx==1',
                        {
                            'defines':
                            [
                                'ANGLE_USE_X11',
                            ],
                            'sources':
                            [
                                '<@(libangle_gl_glx_sources)',
                            ],
                        }],
                        ['use_ozone==1',
                        {
                            'defines':
                            [
                                'ANGLE_USE_OZONE',
                            ],
                            'sources':
                            [
                                '<@(libangle_gl_egl_sources)',
                                '<@(libangle_gl_egl_dl_sources)',
                                '<@(libangle_gl_ozone_sources)',
                            ],
                            'cflags':
                            [
                                '<!@(<(pkg-config) --cflags libdrm gbm)',
                            ],
                            'link_settings': {
                                'ldflags': [
                                    '<!@(<(pkg-config) --libs-only-L --libs-only-other libdrm gbm)',
                                ],
                                'libraries': [
                                    '<!@(<(pkg-config) --libs-only-l libdrm gbm) -ldl',
                                ],
                            },
                        }],
                        ['angle_link_glx==1',
                        {
                            'link_settings':
                            {
                                'libraries':
                                [
                                    '-lGL',
                                ],
                            },
                            'defines':
                            [
                                'ANGLE_LINK_GLX',
                            ],
                        }, {
                            # If we don't statically link GL, we need the dl
                            # library so that we can dynamically link with GL.
                            'link_settings': {
                                'libraries': [
                                    '-ldl',
                                ]
                            }
                        }],
                        ['OS=="mac"',
                        {
                            'sources':
                            [
                                '<@(libangle_gl_cgl_sources)',
                            ],
                            'link_settings':
                            {
                                'libraries':
                                [
                                    '$(SDKROOT)/System/Library/Frameworks/Cocoa.framework',
                                    '$(SDKROOT)/System/Library/Frameworks/IOSurface.framework',
                                    '$(SDKROOT)/System/Library/Frameworks/OpenGL.framework',
                                    '$(SDKROOT)/System/Library/Frameworks/QuartzCore.framework',
                                ],
                            },
                            'all_dependent_settings':
                            {
                                'xcode_settings': {
                                    'LD_RUNPATH_SEARCH_PATHS': ['@executable_path/.'],
                                },
                            }
                        }],
                    ],
                }],
                ['angle_enable_vulkan==1',
                {
                    'sources':
                    [
                        '<@(libangle_vulkan_sources)',
                    ],
                    'conditions':
                    [
                        ['target_os=="win"',
                        {
                            'sources':
                            [
                                '<@(libangle_vulkan_win32_sources)',
                            ],
                        }],
                        ['OS=="linux"',
                        {
                            'sources':
                            [
                                '<@(libangle_vulkan_xcb_sources)',
                            ],
                        }],
                    ],
                    'dependencies':
                    [
                        'angle_vulkan',
                    ],
                    'export_dependent_settings':
                    [
                        'angle_vulkan',
                    ],
                }],
                ['angle_enable_null==1',
                {
                    'sources':
                    [
                        '<@(libangle_null_sources)',
                    ],
                }],
                ['angle_build_winrt==0 and target_os=="win"',
                {
                    'dependencies':
                    [
                        'copy_compiler_dll'
                    ],
                }],
                ['angle_build_winrt==1',
                {
                    'msvs_requires_importlibrary' : 'true',
                }],
            ],
        },
        {
            'target_name': 'libGLESv2',
            'type': '<(angle_gl_library_type)',
            'dependencies': [ 'libANGLE', 'angle_common' ],
            'includes': [ '../gyp/common_defines.gypi', ],
            'sources':
            [
                '<@(libglesv2_sources)',
            ],
            'defines':
            [
                'LIBGLESV2_IMPLEMENTATION',
            ],
            'conditions':
            [
                ['angle_build_winrt==1',
                {
                    'msvs_requires_importlibrary' : 'true',
                }],
                ['angle_gl_library_type== "shared_library"',
                {
                    'defines':[
                      'LIBGLESV2_DLL'
                    ]
                }],
            ],

        },

        {
            'target_name': 'libGLESv2_static',
            'type': 'static_library',
            'dependencies': [ 'libANGLE', 'angle_common' ],
            'export_dependent_settings':
            [
                'libANGLE',
            ],
            'includes': [ '../gyp/common_defines.gypi', ],
            'sources':
            [
                '<@(libglesv2_sources)',
            ],
            'conditions':
            [
                ['angle_build_winrt==1',
                {
                    'msvs_requires_importlibrary' : 'true',
                }],
            ],
        },
    ],
}
